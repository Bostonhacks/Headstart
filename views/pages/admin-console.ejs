<!doctype html>
<html>
<head>
  <link rel="stylesheet" href="css/profile.css">
  <link rel="stylesheet" href="css/admin.css">
</head>
<body>
  <h1 class="text-center" id="admin-title"> <a href='/'>BostonHacks</a> Admin Console </h1>
  
  <style>
    p,table {
      color: black;
    }
    td, th {
      border: 1px solid #EF6262;
      text-align: left;
      /*padding: 4px;*/
    }
    button { 
      background-color: #EF9494;
      padding: 2px 10px; 
    }
  </style>

  <div id="app">
    <p>
      Notify All...
      <button v-on:click='notify()'>Accepted</button>
      <button v-on:click='notify()'>Pending</button>
      <button v-on:click='notify()'>Rejected</button>
      <button v-on:click='notify()'>Not yet Notified</button>
      <button v-on:click='notify()'>Accepted / Rejected and not yet Notified</button>
      <button v-on:click='notify()'>Pending and not yet Notified</button>
    </p>
    <p>
      Sort by...
      <button v-on:click='sortUsers("status")'>Status</button>
      <button v-on:click='sortUsers("school")'>School</button>
      <button v-on:click='sortUsers("major")'>Major</button>
      <!-- <button v-on:click='sortUsers("level_of_study")'>Level of Study</button> -->
      <button v-on:click='sortUsers("reimbursementAmount")'>Reimbursement</button>
    </p>
    <p><button v-on:click='getCSV()'>Export to CSV</button></p>
    <p>Applicants: {{ users.length }}, &nbsp Accepted: {{ acceptedNum }} </p>
    <p>A - Accept, P - Set Pending, R - Reject, N - Notify of Status</p>
    <table>
      <thead>
        <tr>
          <th>Change<br>Status</th>
          <th>Status</th>
          <th>Name</th>
          <th>School</th>
          <th>Major</th>
          <!-- <th>Level of<br>Study</th> -->
          <th>Reimburse</th>
          <th>Additional</th>
          <th>Gender</th>
          <th>First<br>Hackathon?</th>
          <th>Notified</th>
        </tr>
      </thead>
      <tbody>
        <tr v-for="user in users">
          <td v-if='user.status != "Not Attending"' style="min-width:150px">
            <button v-on:click='changeStatus(user._id, "Accepted")'>A</button> <!-- Accept -->
            <button v-on:click='changeStatus(user._id, "Denied")'>R</button> <!-- Reject -->
            <button v-on:click='changeStatus(user._id, "Pending")'>P</button> <!-- Put on Pending -->
            <button>N</button> <!-- Notify (send email) -->
          </td>
          <td v-else> {{ user.status }} </td>
          <td v-if='user.status == "Accepted"' style='background-color: green'> {{ user.status }} </td>
          <td v-else-if='user.status == "Denied"' style='background-color: red'> {{ user.status }} </td>
          <td v-else style='background-color: #f90'> {{ user.status }} </td>
          <td> {{ user.first_name }} {{ user.last_name }} </td>
          <td v-if='user.school'> {{ user.school.name }} </td>
          <td v-else> none </td>
          <td> {{ user.major }} </td>
          <!-- <td> {{ user.level_of_study }} </td> -->
          <td>
            <div v-if="user.reimbursementSeeking"> 
              {{ user.reimbursementAmount }}, {{ user.reimbursementLocation }}
            </div>
          </td>
          <td> {{ user.additional }} </td>
          <td> {{ user.gender }} </td>
          <td> {{ user.firstHackathon }} </td>
          <td>No.</td>
        </tr>
      </tbody>
    </table>
  </div>

  <script src="/js/vue.js"></script>

  <script>
    function httpGetAsync(theUrl, callback)
    {
      var xmlHttp = new XMLHttpRequest();
      xmlHttp.onreadystatechange = function() { 
        if (xmlHttp.readyState == 4 && xmlHttp.status == 200)
          callback(xmlHttp.responseText);
      }
      xmlHttp.open("GET", theUrl, true); // true for asynchronous 
      xmlHttp.send(null);
    }

    var app; 

    httpGetAsync('/admin-all-registrants', function(result) {
      app = new Vue({
        el: '#app',
        data: {
          users: JSON.parse(result),
          acceptedNum: JSON.parse(result).filter(function(u){ return u.status=="Accepted" }).length
        },
        methods: {
          changeStatus: function(userid, stat) {
            console.log("Set user " + userid + " to " + stat)
            httpGetAsync("/changeStatus/" + userid + "/" + stat, function(responseText) {
              for (i = 0; i < app.users.length; i++){
                if (app.users[i]._id == userid) app.users[i].status = stat
              }
          })
          },
          sortUsers: function(param) {
            if (param == "school") {
              app.users.sort(function(a,b) {
                if (a.school != undefined && b.school != undefined){
                  return (a.school.name > b.school.name) ? 1 : ((b.school.name > a.school.name) ? -1 : 0);
                } else {
                  return 1
                }
              }) 
            } else {
              app.users.sort(function(a,b) {
                return (a[param] > b[param]) ? 1 : ((b[param] > a[param]) ? -1 : 0);
              }) 
            }
          },
          notify: function() {
            alert("Notifications don't work yet!")
          },
          getCSV: function() {
            // var data = [["name1", "city1", "some other info"], ["name2", "city2", "more info"]];
            var csvContent = "data:text/csv;charset=utf-8," + "\n"
            csvContent += Object.keys(app.users[10]).join(",")
            app.users.forEach(function(user, index){
              dataString = Object.keys(user).map(function(k){return user[k]}).join(",")
              csvContent += dataString + "\n"
            })
            var encodedUri = encodeURI(csvContent);
            var link = document.createElement("a");
            link.setAttribute("href", encodedUri);
            link.setAttribute("download", "bostonhacks_userdata.csv");
            document.body.appendChild(link); // Required for FF
            link.click(); // This will download the data file named "my_data.csv".  
          }
        }
      })
    })
  </script>
</body>

<script src="https://use.fontawesome.com/fae771462f.js"></script>
</html>
